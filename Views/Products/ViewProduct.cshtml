@model FipsFrontend.Models.Product
@{
    ViewData["Title"] = Model.Title;
}

@section BeforeContent {
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list">
            <li class="govuk-breadcrumbs__list-item">
                <a class="govuk-breadcrumbs__link" href="/products">Back to products</a>
            </li>
        </ol>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
        <nav aria-label="Components Menu" class="dfe-vertical-nav">
            <button type="button" class="dfe-vertical-nav__toggle dfe-js-vertical-nav-toggle" aria-controls="side-navigation" hidden="" aria-expanded="false">
                Product navigation
            </button>
            <ul class="dfe-vertical-nav__section" id="side-navigation">
                <li class="dfe-vertical-nav__section-item dfe-vertical-nav__section-item--current">
                    <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="/product/@(string.IsNullOrWhiteSpace(Model.FipsId) ? Model.DocumentId : Model.FipsId)">Overview</a>
                </li>
                <li class="dfe-vertical-nav__section-item">
                    <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="/product/@(string.IsNullOrWhiteSpace(Model.FipsId) ? Model.DocumentId : Model.FipsId)/categories">Categories</a>
                </li>
                <li class="dfe-vertical-nav__section-item">
                    <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="/product/@(string.IsNullOrWhiteSpace(Model.FipsId) ? Model.DocumentId : Model.FipsId)/propose-change">Propose a change</a>
                </li>
            </ul>
        </nav>
    </div>

    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">@Model.Title</h1>

        @if (Model.CategoryValues?.Any() == true)
        {
            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">ID</th>
                        <th scope="col" class="govuk-table__header">Phase</th>
                        <th scope="col" class="govuk-table__header">Business area</th>
                        <th scope="col" class="govuk-table__header">Contacts</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">UniqueID: @(string.IsNullOrWhiteSpace(Model.FipsId) ? Model.DocumentId?.Substring(0, Math.Min(7, Model.DocumentId?.Length ?? 0)) : Model.FipsId)</td>
                        <td class="govuk-table__cell">
                            @{
                                var phaseCategory = Model.CategoryValues?.FirstOrDefault(cv => cv.CategoryType?.Name?.Equals("Phase", StringComparison.OrdinalIgnoreCase) == true);
                                var businessAreaCategory = Model.CategoryValues?.FirstOrDefault(cv => cv.CategoryType?.Name?.Equals("Business area", StringComparison.OrdinalIgnoreCase) == true);
                            }
                            @if (phaseCategory != null)
                            {
                                <strong>@phaseCategory.Name</strong>
                            }
                        </td>
                        <td class="govuk-table__cell">
                            @if (businessAreaCategory != null)
                            {
                                @businessAreaCategory.Name
                            }
                        </td>
                        <td class="govuk-table__cell">
                            @if (Model.ProductContacts?.Any() == true)
                            {
                                <a href="#contacts" class="govuk-link" rel="noopener noreferrer">@Model.ProductContacts.Count contacts</a>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        <h2 class="govuk-heading-m">Description</h2>
        
        @if (!string.IsNullOrEmpty(Model.LongDescription))
        {
            <pre class="govuk-body pre-wrap-text">@Model.LongDescription</pre>
        }
        else if (!string.IsNullOrEmpty(Model.ShortDescription))
        {
            <pre class="govuk-body pre-wrap-text">@Model.ShortDescription</pre>
        }

        @if (!string.IsNullOrEmpty(Model.FipsId) || !string.IsNullOrEmpty(Model.CmdbSysId))
        {
            <h2 class="govuk-heading-m">Product identifiers</h2>
            <dl class="govuk-summary-list">
                @if (!string.IsNullOrEmpty(Model.FipsId))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">FIPS ID</dt>
                        <dd class="govuk-summary-list__value">@Model.FipsId</dd>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.CmdbSysId))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">CMDB System ID</dt>
                        <dd class="govuk-summary-list__value">@Model.CmdbSysId</dd>
                    </div>
                }
            </dl>
        }

        <h2 class="govuk-heading-m" id="contacts">Responsibilities and contacts</h2>

        @if (Model.ProductContacts?.Any() == true)
        {
            <dl class="govuk-summary-list">
                @foreach (var contact in Model.ProductContacts)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @if (!string.IsNullOrEmpty(contact.Role))
                            {
                                @GetFriendlyRoleName(contact.Role)
                            }
                            else
                            {
                                @(contact.UsersPermissionsUser?.DisplayName ?? contact.UsersPermissionsUser?.FirstName + " " + contact.UsersPermissionsUser?.LastName ?? "Contact")
                            }
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @if (!string.IsNullOrEmpty(contact.UsersPermissionsUser?.Email))
                            {
                                <a href="mailto:@contact.UsersPermissionsUser.Email" class="govuk-link" rel="noopener noreferrer">@(contact.UsersPermissionsUser?.DisplayName ?? contact.UsersPermissionsUser?.FirstName + " " + contact.UsersPermissionsUser?.LastName ?? contact.UsersPermissionsUser?.Email)</a>
                            }
                            else
                            {
                                @(contact.UsersPermissionsUser?.DisplayName ?? contact.UsersPermissionsUser?.FirstName + " " + contact.UsersPermissionsUser?.LastName ?? "Contact")
                            }
                        </dd>
                    </div>
                }
            </dl>
        }
        else
        {
            <p class="govuk-body">No contact information available.</p>
        }
    </div>
</div>

@functions {
    public string GetFriendlyRoleName(string role)
    {
        return role switch
        {
            "senior_responsible_owner" => "Senior Responsible Owner",
            "delivery_manager" => "Delivery Manager",
            "information_asset_owner" => "Information Asset Owner",
            _ => role // Return original if no mapping found
        };
    }
}
