@using FipsFrontend.Helpers
@model ProductCreateViewModel
@{ ViewData["Title"] = Model.PageTitle; } 
@{ ViewData["Description"] = Model.PageDescription; }

@section BeforeContent {

  <div class="dfe-masthead">
        <div class="govuk-width-container">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <h1 class="govuk-heading-xl dfe-masthead--title govuk-!-margin-bottom-0">
                        Create new FIPS entry
                    </h1>
                </div>
            </div>
            
        </div>
    </div>

}


<div class="govuk-grid-row">
  <div class="govuk-grid-column-one-quarter">

    <nav class="dfe-vertical-nav">
      <ul class="dfe-vertical-nav__section">
     
        <li class="dfe-vertical-nav__section-item dfe-vertical-nav__section-item--current">
          <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="/Admin/ProductCreate" data-action="create_product">
            Create new entry
          </a>
        </li>
       
      </ul>
    </nav>

  </div>

  <div class="govuk-grid-column-three-quarters">
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="govuk-notification-banner govuk-notification-banner--success" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
            <div class="govuk-notification-banner__header">
                <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                    Success
                </h2>
            </div>
            <div class="govuk-notification-banner__content">
                <p class="govuk-notification-banner__heading">
                    @TempData["SuccessMessage"]
                </p>
            </div>
        </div>
    }

    <form asp-action="ProductCreate" method="post" novalidate>
        @Html.AntiForgeryToken()
        
        <div class="govuk-form-group @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <h1 class="govuk-label-wrapper">
                <label class="govuk-label govuk-label--m" for="Title">
                    Product title
                </label>
            </h1>
            <div id="Title-hint" class="govuk-hint">
                This is the title of the product that will be displayed in search results and product results.
            </div>
            @if (ViewData.ModelState["Title"]?.Errors.Count > 0)
            {
                <span class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span>
                    @ViewData.ModelState["Title"]?.Errors.First().ErrorMessage
                </span>
            }
            <input class="govuk-input @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
                   id="Title" 
                   name="Title" 
                   type="text" 
                   value="@Model.Title"
                   maxlength="255"
                   aria-describedby="@(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "Title-error Title-hint" : "Title-hint")">
        </div>

        <div class="govuk-form-group @(ViewData.ModelState["ShortDescription"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <h1 class="govuk-label-wrapper">
                <label class="govuk-label govuk-label--m" for="ShortDescription">
                    Short description
                </label>
            </h1>
            <div id="ShortDescription-hint" class="govuk-hint">
                This is the short description of the product that will be displayed in search results and product results.
            </div>
            @if (ViewData.ModelState["ShortDescription"]?.Errors.Count > 0)
            {
                <span class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span>
                    @ViewData.ModelState["ShortDescription"]?.Errors.First().ErrorMessage
                </span>
            }
            <textarea class="govuk-textarea @(ViewData.ModelState["ShortDescription"]?.Errors.Count > 0 ? "govuk-textarea--error" : "")" 
                      id="ShortDescription" 
                      name="ShortDescription" 
                      rows="3"
                      maxlength="500"
                      aria-describedby="@(ViewData.ModelState["ShortDescription"]?.Errors.Count > 0 ? "ShortDescription-error ShortDescription-hint" : "ShortDescription-hint")">@Model.ShortDescription</textarea>
        </div>

        <h2 class="govuk-heading-m">Key people</h2>

        <p class="govuk-body">
            Add the details of the people responsible for the product, if known.
        </p>

        

    <div class="govuk-form-group @(ViewData.ModelState["ServiceOwner"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
        <label class="govuk-label govuk-label--s" for="ServiceOwner">
            Service Owner email address
        </label>
        <div id="ServiceOwner-hint" class="govuk-hint">
            The person responsible for the overall service delivery and management.
        </div>
        @if (ViewData.ModelState["ServiceOwner"]?.Errors.Count > 0)
        {
            <span class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span>
                @ViewData.ModelState["ServiceOwner"]?.Errors.First().ErrorMessage
            </span>
        }
        <input class="govuk-input @(ViewData.ModelState["ServiceOwner"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
               asp-for="ServiceOwner" 
               id="ServiceOwner" 
               type="email" 
               aria-describedby="@(ViewData.ModelState["ServiceOwner"]?.Errors.Count > 0 ? "ServiceOwner-error ServiceOwner-hint" : "ServiceOwner-hint")">
    </div>

        <div class="govuk-form-group @(ViewData.ModelState["InformationAssetOwner"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <label class="govuk-label govuk-label--s" for="InformationAssetOwner">
                Information Asset Owner email address
            </label>
            <div id="InformationAssetOwner-hint" class="govuk-hint">
                The person responsible for the information asset and its security.
            </div>
            @if (ViewData.ModelState["InformationAssetOwner"]?.Errors.Count > 0)
            {
                <span class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span>
                    @ViewData.ModelState["InformationAssetOwner"]?.Errors.First().ErrorMessage
                </span>
            }
            <input class="govuk-input @(ViewData.ModelState["InformationAssetOwner"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
                   asp-for="InformationAssetOwner" 
                   id="InformationAssetOwner" 
                   type="email" 
                   aria-describedby="@(ViewData.ModelState["InformationAssetOwner"]?.Errors.Count > 0 ? "InformationAssetOwner-error InformationAssetOwner-hint" : "InformationAssetOwner-hint")">
        </div>

        <div class="govuk-form-group @(ViewData.ModelState["DeliveryManager"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <label class="govuk-label govuk-label--s" for="DeliveryManager">
                Delivery Manager email address
            </label>
            <div id="DeliveryManager-hint" class="govuk-hint">
                The person responsible for the delivery and development of the product.
            </div>
            @if (ViewData.ModelState["DeliveryManager"]?.Errors.Count > 0)
            {
                <span class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span>
                    @ViewData.ModelState["DeliveryManager"]?.Errors.First().ErrorMessage
                </span>
            }
            <input class="govuk-input @(ViewData.ModelState["DeliveryManager"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
                   asp-for="DeliveryManager" 
                   id="DeliveryManager" 
                   type="email" 
                   aria-describedby="@(ViewData.ModelState["DeliveryManager"]?.Errors.Count > 0 ? "DeliveryManager-error DeliveryManager-hint" : "DeliveryManager-hint")">
        </div>

        <div class="govuk-form-group @(ViewData.ModelState["ProductManager"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <label class="govuk-label govuk-label--s" for="ProductManager">
                Product Manager email address
            </label>
            <div id="ProductManager-hint" class="govuk-hint">
                The person responsible for the product strategy and roadmap.
            </div>
            @if (ViewData.ModelState["ProductManager"]?.Errors.Count > 0)
            {
                <span class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span>
                    @ViewData.ModelState["ProductManager"]?.Errors.First().ErrorMessage
                </span>
            }
            <input class="govuk-input @(ViewData.ModelState["ProductManager"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
                   asp-for="ProductManager" 
                   id="ProductManager" 
                   type="email" 
                   aria-describedby="@(ViewData.ModelState["ProductManager"]?.Errors.Count > 0 ? "ProductManager-error ProductManager-hint" : "ProductManager-hint")">
        </div>

        @if (Model.AvailablePhases.Any())
        {
            <div class="govuk-form-group @(ViewData.ModelState["SelectedPhaseId"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Phase
                    </legend>
                    <div id="SelectedPhaseId-hint" class="govuk-hint">
                        The current phase the product is in.
                    </div>
                    @if (ViewData.ModelState["SelectedPhaseId"]?.Errors.Count > 0)
                    {
                        <span class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @ViewData.ModelState["SelectedPhaseId"]?.Errors.First().ErrorMessage
                        </span>
                    }
                    <div class="govuk-radios" data-module="govuk-radios">
                        @foreach (var phase in Model.AvailablePhases)
                        {
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" 
                                       id="SelectedPhaseId_@phase.Id" 
                                       name="SelectedPhaseId" 
                                       type="radio" 
                                       value="@phase.Id"
                                       @(Model.SelectedPhaseId == phase.Id ? "checked" : "")>
                                <label class="govuk-label govuk-radios__label" for="SelectedPhaseId_@phase.Id">
                                    @phase.Name
                                </label>
                            </div>
                        }
                    </div>
                </fieldset>
            </div>
        }

        @if (Model.AvailableGroups.Any())
        {
            <div class="govuk-form-group @(ViewData.ModelState["SelectedGroupId"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Business area
                    </legend>
                    <div id="SelectedGroupId-hint" class="govuk-hint">
                        The area of DfE that is primarily responsible for the product.
                    </div>
                    @if (ViewData.ModelState["SelectedGroupId"]?.Errors.Count > 0)
                    {
                        <span class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @ViewData.ModelState["SelectedGroupId"]?.Errors.First().ErrorMessage
                        </span>
                    }
                    <div class="govuk-radios" data-module="govuk-radios">
                 
                        @foreach (var group in Model.AvailableGroups.OrderBy(g => g.Name))
                        {
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" 
                                       id="SelectedGroupId_@group.Id" 
                                       name="SelectedGroupId" 
                                       type="radio" 
                                       value="@group.Id"
                                       @(Model.SelectedGroupId == group.Id ? "checked" : "")>
                                <label class="govuk-label govuk-radios__label" for="SelectedGroupId_@group.Id">
                                    @group.Name
                                </label>
                            </div>
                        }
                    </div>
                </fieldset>
            </div>
        }

        <div class="govuk-button-group">
            <button class="govuk-button" data-module="govuk-button" type="submit">
                Create product
            </button>
            <a class="govuk-link govuk-link--no-visited-state" href="/admin">Cancel</a>
        </div>

    </form>

  </div>
</div>
