@model ProductFormViewModel
@{
    ViewData["Title"] = "Edit Product";
}

<div class="govuk-width-container">
    <main class="govuk-main-wrapper" id="main-content" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">Edit Product</h1>
                <p class="govuk-body-l">Update the product information below.</p>
            </div>
        </div>

        <form method="post" novalidate>
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <div class="govuk-form-group @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label" for="Title">
                            Product Title <span class="govuk-visually-hidden">required</span>
                        </label>
                        @if (ViewData.ModelState["Title"]?.Errors.Count > 0)
                        {
                            <span class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["Title"]?.Errors.First().ErrorMessage
                            </span>
                        }
                        <input class="govuk-input @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "govuk-input--error" : "")" 
                               id="Title" name="Title" type="text" value="@Model.Title" required>
                    </div>

                    <div class="govuk-form-group @(ViewData.ModelState["ShortDescription"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label" for="ShortDescription">
                            Short Description <span class="govuk-visually-hidden">required</span>
                        </label>
                        @if (ViewData.ModelState["ShortDescription"]?.Errors.Count > 0)
                        {
                            <span class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["ShortDescription"]?.Errors.First().ErrorMessage
                            </span>
                        }
                        <textarea class="govuk-textarea @(ViewData.ModelState["ShortDescription"]?.Errors.Count > 0 ? "govuk-textarea--error" : "")" 
                                  id="ShortDescription" name="ShortDescription" rows="3" required>@Model.ShortDescription</textarea>
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="LongDescription">
                            Long Description
                        </label>
                        <textarea class="govuk-textarea" id="LongDescription" name="LongDescription" rows="5">@Model.LongDescription</textarea>
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="FipsId">
                            FIPS ID
                        </label>
                        <input class="govuk-input govuk-input--width-10" id="FipsId" name="FipsId" type="number" value="@Model.FipsId">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="CmdbSysId">
                            CMDB System ID
                        </label>
                        <input class="govuk-input govuk-input--width-20" id="CmdbSysId" name="CmdbSysId" type="text" value="@Model.CmdbSysId">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="ProductUrl">
                            Product URL
                        </label>
                        <input class="govuk-input" id="ProductUrl" name="ProductUrl" type="url" value="@Model.ProductUrl">
                    </div>

                    <div class="govuk-form-group @(ViewData.ModelState["State"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
                        <label class="govuk-label" for="State">
                            Product State
                        </label>
                        @if (ViewData.ModelState["State"]?.Errors.Count > 0)
                        {
                            <span class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["State"]?.Errors.First().ErrorMessage
                            </span>
                        }
                        <select class="govuk-select @(ViewData.ModelState["State"]?.Errors.Count > 0 ? "govuk-select--error" : "")" 
                                id="State" name="State">
                            @foreach (var state in Model.AvailableStates)
                            {
                                <option value="@state" selected="@(Model.State == state ? "selected" : null)">@state</option>
                            }
                        </select>
                    </div>

                    @if (Model.PublishedAt.HasValue)
                    {
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="PublishedAt">
                                Published Date
                            </label>
                            <div class="govuk-inset-text">
                                <p class="govuk-body">This product was published on @Model.PublishedAt.Value.ToString("dd MMMM yyyy 'at' HH:mm")</p>
                                <p class="govuk-body">To republish with a new date, check the box below:</p>
                                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                    <div class="govuk-checkboxes__item">
                                        <input class="govuk-checkboxes__input" id="Republish" name="Republish" type="checkbox" value="true">
                                        <label class="govuk-label govuk-checkboxes__label" for="Republish">
                                            Republish with current date
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button">Update Product</button>
                        <a href="@Url.Action("Products", "Admin")" class="govuk-button govuk-button--secondary">Cancel</a>
                    </div>
                </div>

                <div class="govuk-grid-column-one-third">
                    <div class="govuk-inset-text">
                        <h3 class="govuk-heading-s">Editing Product #@Model.Id</h3>
                        <ul class="govuk-list govuk-list--bullet">
                            <li>Changes will be saved immediately</li>
                            <li>Published products remain published after editing</li>
                            <li>You can change the publication status from the product list</li>
                            <li>All required fields must be completed</li>
                        </ul>
                    </div>
                </div>
            </div>
        </form>
    </main>
</div>
