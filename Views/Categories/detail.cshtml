@using FipsFrontend.Helpers
@model CategoriesDetailViewModel
@{ ViewData["Title"] = Model.PageTitle; }

@section BeforeContent {
<div class="govuk-width-container">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
        @if (Model.ParentCategory != null)
        {
            
                <a href="/categories/@Model.CategoryType.Slug" class="govuk-back-link">Back to @Model.CategoryType.Name</a>
         
        }
        else
        {
           
                <a href="/categories" class="govuk-back-link">Back to all categories</a>
          
        }
        </div>
    </div>
</div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
       
        <span class="govuk-caption-l">@Model.Group</span>
        <h1 class="govuk-heading-xl">@ViewData["Title"]</h1>
        @if (!string.IsNullOrEmpty(Model.PageDescription))
        {
            <p class="govuk-body-l">@Model.PageDescription</p>
        }

        @if (Model.ParentCategory != null)
        {
            <!-- Parent category card -->
            <ul class="dfe-chevron-card__list">
                <li class="dfe-chevron-card">
                    <div class="dfe-chevron-card__wrapper">
                        <h2 class="govuk-heading-s govuk-!-margin-bottom-2">
                            <a class="govuk-link govuk-link--no-visited-state category-filter-link" 
                               href="/products?@GetFilterParameter(Model.CategoryType.Name, Model.ParentCategory.Slug)"
                               data-category-name="@Model.ParentCategory.Name"
                               data-category-slug="@Model.ParentCategory.Slug"
                               data-category-type="@Model.CategoryType.Name"
                               data-filter-type="@Model.CategoryType.Name.ToLower()"
                               data-action="view_products">
                                @Model.ParentCategory.Name
                            </a>
                        </h2>
                        <p class="dfe-chevron-card__description govuk-body govuk-body-s">@Model.ParentCategory.ShortDescription</p>
                        
                        <a class="dfe-chevron-card__link category-filter-link" 
                           href="/products?@GetFilterParameter(Model.CategoryType.Name, Model.ParentCategory.Slug)" 
                           aria-hidden="true" 
                           tabindex="-1"
                           data-category-name="@Model.ParentCategory.Name"
                           data-category-slug="@Model.ParentCategory.Slug"
                           data-category-type="@Model.CategoryType.Name"
                           data-filter-type="@Model.CategoryType.Name.ToLower()"
                           data-action="view_products">
                            <span class="govuk-visually-hidden">@Model.ParentCategory.Name</span>
                        </a>
                      
                    </div>  
                    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                </li>
            </ul>

            <h2 class="govuk-heading-m">Sub-categories</h2>
            <p class="govuk-body">Sub categories within this category.</p>
        }

        @if (Model.CategoryValues.Any())
        {
            <ul class="dfe-chevron-card__list">
                @foreach (var categoryValue in Model.CategoryValues)
                {
                    <li class="dfe-chevron-card">
                        <div class="dfe-chevron-card__wrapper">
                            @if (Model.CategoryType.MultiLevel && categoryValue.Children?.Any() == true)
                            {
                                <!-- Multi-level category with children - use chevron card -->
                                <h2 class="govuk-heading-s govuk-!-margin-bottom-2">
                                    <a class="govuk-link govuk-link--no-visited-state category-link" 
                                       href="/categories/@Model.CategoryType.Slug/@categoryValue.Slug"
                                       data-category-name="@categoryValue.Name"
                                       data-category-slug="@categoryValue.Slug"
                                       data-category-type="@Model.CategoryType.Name"
                                       data-action="view_subcategory">
                                        @categoryValue.Name
                                    </a>
                                </h2>
                                <p class="dfe-chevron-card__description govuk-body govuk-body-s">@categoryValue.Children.Count sub-categories</p>
                                
                                <a class="dfe-chevron-card__link category-link" 
                                   href="/categories/@Model.CategoryType.Slug/@categoryValue.Slug" 
                                   aria-hidden="true" 
                                   tabindex="-1"
                                   data-category-name="@categoryValue.Name"
                                   data-category-slug="@categoryValue.Slug"
                                   data-category-type="@Model.CategoryType.Name"
                                   data-action="view_subcategory">
                                    <span class="govuk-visually-hidden">@categoryValue.Name</span>
                                </a>
                            }
                            else
                            {
                                <!-- Leaf category - link to products with filter -->
                                <h2 class="govuk-heading-s govuk-!-margin-bottom-2">
                                    <a class="govuk-link govuk-link--no-visited-state category-filter-link" 
                                       href="/products?@GetFilterParameter(Model.CategoryType.Name, categoryValue.Slug)"
                                       data-category-name="@categoryValue.Name"
                                       data-category-slug="@categoryValue.Slug"
                                       data-category-type="@Model.CategoryType.Name"
                                       data-filter-type="@Model.CategoryType.Name.ToLower()"
                                       data-action="view_products">
                                        @categoryValue.Name
                                    </a>
                                </h2>
                                <p class="dfe-chevron-card__description govuk-body govuk-body-s">@categoryValue.ShortDescription</p>
                                
                                <a class="dfe-chevron-card__link category-filter-link" 
                                   href="/products?@GetFilterParameter(Model.CategoryType.Name, categoryValue.Slug)" 
                                   aria-hidden="true" 
                                   tabindex="-1"
                                   data-category-name="@categoryValue.Name"
                                   data-category-slug="@categoryValue.Slug"
                                   data-category-type="@Model.CategoryType.Name"
                                   data-filter-type="@Model.CategoryType.Name.ToLower()"
                                   data-action="view_products">
                                    <span class="govuk-visually-hidden">@categoryValue.Name</span>
                                </a>
                            }
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="govuk-inset-text">
                <p>No items are currently available in this category.</p>
            </div>
        }


    </div>
</div>

@functions {
    private string GetFilterParameter(string categoryTypeName, string slug)
    {
        return categoryTypeName.ToLower() switch
        {
            "phase" => $"phase={slug}",
            "channel" => $"channel={slug}",
            "type" => $"type={slug}",
            "business area" => $"group={slug}",
            "user group" => $"userGroup={slug}",
            _ => $"category={slug}"
        };
    }
}

@section Scripts {
    <script nonce="@Html.GetNonce()">
        // Google Analytics Event Tracking Functions
        function trackGAEvent(eventName, parameters = {}) {
            if (typeof gtag !== 'undefined') {
                gtag('event', eventName, parameters);
            } else if (typeof ga !== 'undefined') {
                ga('send', 'event', parameters.category || 'User Interaction', eventName, parameters.label || '', parameters.value || 0);
            }
            console.log('GA Event:', eventName, parameters);
        }

        function trackCategoryClick(categoryName, categorySlug, categoryType, action = 'view') {
            trackGAEvent('category_' + action, {
                event_category: 'Category Navigation',
                category_name: categoryName,
                category_slug: categorySlug,
                category_type: categoryType,
                event_label: categoryName,
                custom_parameter_1: categorySlug,
                custom_parameter_2: categoryType
            });
        }

        function trackCategoryFilter(categoryName, categorySlug, filterType, action = 'applied') {
            trackGAEvent('category_filter_' + action, {
                event_category: 'Category Filter',
                category_name: categoryName,
                category_slug: categorySlug,
                filter_type: filterType,
                event_label: filterType + ': ' + categoryName,
                custom_parameter_1: categorySlug,
                custom_parameter_2: filterType
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Category navigation link tracking (for subcategories)
            document.querySelectorAll('.category-link').forEach(function(link) {
                link.addEventListener('click', function(e) {
                    const categoryName = this.getAttribute('data-category-name');
                    const categorySlug = this.getAttribute('data-category-slug');
                    const categoryType = this.getAttribute('data-category-type');
                    const action = this.getAttribute('data-action') || 'view';
                    
                    trackCategoryClick(categoryName, categorySlug, categoryType, action);
                });
            });

            // Category filter link tracking (for product filtering)
            document.querySelectorAll('.category-filter-link').forEach(function(link) {
                link.addEventListener('click', function(e) {
                    const categoryName = this.getAttribute('data-category-name');
                    const categorySlug = this.getAttribute('data-category-slug');
                    const categoryType = this.getAttribute('data-category-type');
                    const filterType = this.getAttribute('data-filter-type');
                    const action = this.getAttribute('data-action') || 'applied';
                    
                    trackCategoryFilter(categoryName, categorySlug, filterType, action);
                });
            });

            // Back link tracking
            document.querySelectorAll('.govuk-back-link').forEach(function(link) {
                link.addEventListener('click', function(e) {
                    const linkText = this.textContent.trim();
                    trackGAEvent('back_link_click', {
                        event_category: 'Navigation',
                        back_link_text: linkText,
                        event_label: linkText
                    });
                });
            });
        });
    </script>
}
